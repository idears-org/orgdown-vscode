#+TITLE: Comprehensive Test Suite for Standard Blocks

* 1. Integration Test Cases

This section is the primary source for the snapshot test. It should contain
various valid and edge-case examples of QUOTE, EXAMPLE, VERSE, CENTER, and
COMMENT blocks.

** 1.1. Basic Functionality

#+BEGIN_QUOTE
This is a simple quote block.
It can span multiple lines.
#+END_QUOTE

#+BEGIN_EXAMPLE
This is an example block.
It preserves whitespace literally.
  Indentation is respected.
#+END_EXAMPLE

#+BEGIN_VERSE
  A block for verse,
  where lines can be terse.
#+END_VERSE

#+BEGIN_CENTER
This text should be centered.
As should this.
#+END_CENTER

#+BEGIN_COMMENT
This is a comment block.
Its content should not be exported.
#+END_COMMENT

** 1.2. With Parameters

#+BEGIN_QUOTE :author "John Doe"
A quote with a quoted author.
#+END_QUOTE

** 1.3. Case Insensitivity

#+begin_quote
Lowercase begin.
#+end_quote

#+BEGIN_EXAMPLE
Mixed case end.
#+EnD_ExAmPlE

** 1.4. Indentation

  #+BEGIN_VERSE
  This whole block is indented.
  The content is also indented.
  #+END_VERSE

** 1.5. Content-Specific Parsing

*** 1.5.1. Markup-Enabled Blocks (QUOTE, VERSE, CENTER)

#+BEGIN_QUOTE
This quote should have *bold* and /italic/ text.
#+END_QUOTE

#+BEGIN_VERSE
This verse also supports ~code~ and +strikethrough+.
#+END_VERSE

*** 1.5.2. Verbatim Blocks (COMMENT, EXAMPLE)

#+BEGIN_EXAMPLE
This example should NOT have *bold* or /italic/ text.
It is all literal.
A line starting with * should be literal text, not a headline.
#+END_EXAMPLE

#+BEGIN_COMMENT
Similarly, this comment block should not process ~code~ or _underline_.
#+END_COMMENT

** 1.6. Nesting

- A list item.
  - A nested list item.
    #+BEGIN_CENTER
    A centered block, nested deep in a list.
    #+END_CENTER

** 1.7. Error Handling & Robustness

*** 1.7.1. Mismatched End Marker

#+BEGIN_QUOTE
This block starts with QUOTE...
#+END_EXAMPLE
...but ends with EXAMPLE. The END line should not be recognized as closing this block, so the QUOTE block scope should continue.

This text should still be inside the QUOTE block.

*** 1.7.2. Implicit Closure

#+BEGIN_QUOTE
This quote is not properly closed.
* This next headline should terminate the quote block.

* 2. Unit Test Cases

This section contains isolated unit tests for the begin regexes. The end regexes
cannot be unit-tested here due to their use of backreferences.

#+NAME: Unit Test: Markup Begin (QUOTE)
#+BEGIN_FIXTURE
#+BEGIN_QUOTE
#+END_QUOTE
#+END_FIXTURE

#+EXPECTED: :type regex :name standardBlockMarkupBeginRegex
| Group # | Expected Value |
|---------+----------------|
| 1       |                |
| 2       | #+BEGIN_       |
| 3       | QUOTE          |
| 4       |                |

#+NAME: Unit Test: Markup (VERSE, indented, case-insensitive, with params)
#+BEGIN_FIXTURE
  #+bEgIn_VeRsE with params
  #+eNd_VeRsE
#+END_FIXTURE

#+EXPECTED: :type regex :name standardBlockMarkupBeginRegex
| Group # | Expected Value |
|---------+----------------|
| 1       | <sp:2>         |
| 2       | #+bEgIn_       |
| 3       | VeRsE          |
| 4       | with params    |

#+NAME: Unit Test: Verbatim Begin (EXAMPLE)
#+BEGIN_FIXTURE
#+BEGIN_EXAMPLE
#+END_EXAMPLE
#+END_FIXTURE

#+EXPECTED: :type regex :name standardBlockVerbatimBeginRegex
| Group # | Expected Value |
|---------+----------------|
| 1       |                |
| 2       | #+BEGIN_       |
| 3       | EXAMPLE        |
| 4       |                |

#+NAME: Unit Test: Verbatim Begin (COMMENT, case-insensitive, with params)
#+BEGIN_FIXTURE
#+begin_comment with params
#+end_comment
#+END_FIXTURE

#+EXPECTED: :type regex :name standardBlockVerbatimBeginRegex
| Group # | Expected Value |
|---------+----------------|
| 1       |                |
| 2       | #+begin_       |
| 3       | comment        |
| 4       | with params    |

#+NAME: Unit Test: Non-match (SRC should not match standard block regex)
#+BEGIN_FIXTURE
#+BEGIN_SRC
#+END_SRC
#+END_FIXTURE

#+EXPECTED: :type regex :name standardBlockMarkupBeginRegex
no-match

#+EXPECTED: :type regex :name standardBlockVerbatimBeginRegex
no-match

#+NAME: Unit Test: blockParameterRegex with quoted value
#+BEGIN_FIXTURE
:author "John Doe"
#+END_FIXTURE

#+EXPECTED: :type regex :name blockParameterRegex
| Group # | Expected Value |
|---------+----------------|
| 1       | :author        |
| 2       | "John Doe"     |


#+NAME: It should handle escaped fixture keywords in input
#+BEGIN_FIXTURE
,#+NAME: This is not a new test case
#+END_FIXTURE
#+EXPECTED: :type scope
"#+NAME: This is not a new test case" => {{scopes.KEYWORD}}


#+NAME: Show Case - scope assertions for standard blocks
#+BEGIN_FIXTURE
#+BEGIN_QUOTE :author "John Doe"
This is a simple quote block with *markup*.
#+END_QUOTE

#+BEGIN_EXAMPLE
*This is literal text*, not markup.
#+END_EXAMPLE
#+END_FIXTURE
#+EXPECTED: :type scope
'#+BEGIN_QUOTE :author "John Doe"' => {{scopes.META_BEGIN_END_BLOCK}}, {{scopes.BLOCK_STANDARD_META}}
  - "#+BEGIN_" => {{scopes.BLOCK_KEYWORD}}
  - "QUOTE" => {{scopes.BLOCK_NAME}}
  - ":author" => {{scopes.BLOCK_PARAMETER_KEY}}
  - '"John Doe"' => {{scopes.BLOCK_PARAMETER_VALUE}}
"This is a simple quote block with *markup*." => {{scopes.BLOCK_STANDARD_CONTENT}}
  - "*markup*" => {{scopes.META_INLINE_BOLD}}
    - "markup" => {{scopes.BOLD}}
"#+END_QUOTE" => {{scopes.META_BEGIN_END_BLOCK}}, {{scopes.BLOCK_STANDARD_META}}

"#+BEGIN_EXAMPLE" => {{scopes.META_BEGIN_END_BLOCK}}, {{scopes.BLOCK_STANDARD_META}}
  - "#+BEGIN_" => {{scopes.BLOCK_KEYWORD}}
  - "EXAMPLE" => {{scopes.BLOCK_NAME}}
"*This is literal text*, not markup." => {{scopes.BLOCK_STANDARD_CONTENT}}
  - "*This is literal text*" => !{{scopes.META_INLINE_BOLD}}, !{{scopes.BOLD}}
"#+END_EXAMPLE" => {{scopes.META_BEGIN_END_BLOCK}}, {{scopes.BLOCK_STANDARD_META}}
