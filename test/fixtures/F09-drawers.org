#+TITLE: Test Suite for Drawers

#+NAME: Standard PROPERTIES drawer should not match generic drawer regex
#+BEGIN_FIXTURE
:PROPERTIES:
:ID:       123abc
:Created:  [2025-08-02]
:Custom:   value
:END:
#+END_FIXTURE

#+EXPECTED: :type regex :name genericDrawerBeginRegex
no-match

#+NAME: LOGBOOK drawer
#+BEGIN_FIXTURE
:LOGBOOK:
- State "TODO"       from ""        [2025-08-02 Sat 10:00]
- State "DONE"       from "TODO"    [2025-08-02 Sat 12:00]
:END:
#+END_FIXTURE

#+EXPECTED: :type regex :name genericDrawerBeginRegex
| Group # | Expected Value |
|---------+----------------|
| 1       | LOGBOOK        |

#+EXPECTED: :type regex :name drawerEndRegex
| Group # | Expected Value |
|---------+----------------|
| 0       | :END:          |

#+NAME: Custom drawer
#+BEGIN_FIXTURE
:CUSTOM:
This is a custom drawer.
:END:
#+END_FIXTURE

#+EXPECTED: :type regex :name genericDrawerBeginRegex
| Group # | Expected Value |
|---------+----------------|
| 1       | CUSTOM         |

#+EXPECTED: :type regex :name drawerEndRegex
| Group # | Expected Value |
|---------+----------------|
| 0       | :END:          |

#+NAME: Drawer with mixed case name
#+BEGIN_FIXTURE
:LogBook:
Mixed case drawer name
:END:
#+END_FIXTURE

#+EXPECTED: :type regex :name genericDrawerBeginRegex
| Group # | Expected Value |
|---------+----------------|
| 1       | LogBook        |

#+EXPECTED: :type regex :name drawerEndRegex
| Group # | Expected Value |
|---------+----------------|
| 0       | :END:          |

#+NAME: Drawer with whitespace and indentation
#+BEGIN_FIXTURE
    :INDENTED:
    Indented drawer content
    :END:
#+END_FIXTURE

#+EXPECTED: :type regex :name genericDrawerBeginRegex
| Group # | Expected Value |
|---------+----------------|
| 1       | INDENTED       |

#+EXPECTED: :type regex :name drawerEndRegex
| Group # | Expected Value |
|---------+----------------|
| 0       | <sp:4>:END:          |

#+NAME: Drawer with special characters and multiline content
#+BEGIN_FIXTURE
:DATA:
Line 1
Line 2: with :colon:
Line 3
:END:
#+END_FIXTURE

#+EXPECTED: :type regex :name genericDrawerBeginRegex
| Group # | Expected Value |
|---------+----------------|
| 1       | DATA           |

#+EXPECTED: :type regex :name drawerEndRegex
| Group # | Expected Value |
|---------+----------------|
| 0       | :END:          |

#+NAME: Drawer with empty content
#+BEGIN_FIXTURE
:EMPTY:
:END:
#+END_FIXTURE

#+EXPECTED: :type regex :name genericDrawerBeginRegex
| Group # | Expected Value |
|---------+----------------|
| 1       | EMPTY          |

#+EXPECTED: :type regex :name drawerEndRegex
| Group # | Expected Value |
|---------+----------------|
| 0       | :END:          |

#+NAME: Drawer not closed
#+BEGIN_FIXTURE
:UNFINISHED:
This drawer is not closed
#+END_FIXTURE

#+EXPECTED: :type regex :name genericDrawerBeginRegex
| Group # | Expected Value |
|---------+----------------|
| 1       | UNFINISHED     |

#+EXPECTED: :type regex :name drawerEndRegex
no-match

#+NAME: Show Case - scope assertions for drawers (generic)
#+BEGIN_FIXTURE
:LOGBOOK:
- State "TODO" from "" [2025-08-02 Sat 10:00]
- State "DONE" from "TODO" [2025-08-02 Sat 12:00]
:END:

:CUSTOM:
Custom drawer content
:END:
#+END_FIXTURE
#+EXPECTED: :type scope
":LOGBOOK:" => {{scopes.META_DRAWER}}, {{scopes.DRAWER_BEGIN_KEYWORD}}
    - "LOGBOOK" => {{scopes.DRAWER_NAME}}
'- State "TODO" from "" [2025-08-02 Sat 10:00]' => {{scopes.DRAWER_CONTENT}}
'- State "DONE" from "TODO" [2025-08-02 Sat 12:00]' => {{scopes.DRAWER_CONTENT}}
":END:" => {{scopes.DRAWER_END_KEYWORD}}

":CUSTOM:" => {{scopes.META_DRAWER}}, {{scopes.DRAWER_BEGIN_KEYWORD}}
    - "CUSTOM" => {{scopes.DRAWER_NAME}}
"Custom drawer content" => {{scopes.DRAWER_CONTENT}}
":END:" => {{scopes.DRAWER_END_KEYWORD}}

#+NAME: Drawer with block inside should not match generic
#+BEGIN_FIXTURE
:PROPERTIES:
#+BEGIN_SRC python
print("Should not be here")
#+END_SRC
:END:
#+END_FIXTURE

#+EXPECTED: :type regex :name genericDrawerBeginRegex
no-match

#+NAME: Drawer with headline inside
#+BEGIN_FIXTURE
:LOGBOOK:
* This headline should not be inside a drawer
:END:
#+END_FIXTURE

#+EXPECTED: :type regex :name genericDrawerBeginRegex
| Group # | Expected Value |
|---------+----------------|
| 1       | LOGBOOK        |

#+EXPECTED: :type regex :name drawerEndRegex
| Group # | Expected Value |
|---------+----------------|
| 0       |                |
