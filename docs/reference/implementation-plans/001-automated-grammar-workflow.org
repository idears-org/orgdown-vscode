#+TITLE: Implementation Plan: 001 - Automated Grammar Workflow
#+AUTHOR: GitHub Copilot
#+DATE: 2025-08-01
#+PROPERTY: header-args :tangle no

* Status: Completed

This document summarizes the implementation of the automated TextMate grammar and testing workflow, as decided in [[../architecture_decisions/005-unified-grammar-and-test-workflow.org][ADR-005]].

* Final Architecture Summary

The implemented workflow is a sophisticated, multi-layered system built on the "Single Source of Truth" (SSoT) principle.

**1. Core SSoT Files**
- *Logic*: `common/src/grammar/regex.ts` defines all regular expressions.
- *Scopes*: `common/src/scoping.ts` defines all TextMate scope names.
- *Structure*: `syntaxes/org.tmLanguage.template.yaml` maps logic and scopes together using placeholders (`{{regexs.*}}` and `{{scopes.*}}`).
- *Tests*: `test/fixtures/*.org` define all test cases. The official format is documented in `test/fixture-howto.org`.

**2. Build Process**
- A unified `pnpm run build` command orchestrates all necessary builds.
- `scripts/build-grammar.ts`: Reads the `.yaml` template and the `regex.ts` and `scoping.ts` modules, then substitutes all placeholders to generate the final `org.tmLanguage.json` grammar.
- `scripts/build-theme.ts`: Reads `scoping.ts` and a base theme to generate a semantic, high-contrast debug theme at `themes/orgdown-debug-theme.json`.

**3. Multi-Layered Testing**
- *L1 Unit Tests*: `vitest` (`pnpm test:unit`) runs against the `test/fixtures/` directory to provide rapid, sub-second feedback on regex logic.
- *L2 Manual Verification*: Developers use the generated debug theme and VS Code's scope inspector to visually confirm highlighting.
- *L3 Snapshot Tests*: `pnpm test:integration` runs snapshot tests to prevent regressions in the final, rendered output.

**4. Directory Structure**

#+BEGIN_SRC
orgdown-vscode/
├── common/src/
│   ├── grammar/regex.ts      # SSoT for Regex Logic
│   └── scoping.ts            # SSoT for Scope Names
├── docs/
│   ├── contributing/
│   │   ├── readme.org        # High-level guide
│   │   └── syntaxes.org      # Detailed syntax workflow
│   └── test/fixture-howto.org # SSoT for Test Format
├── scripts/
│   ├── build-grammar.ts
│   └── build-theme.ts
├── syntaxes/
│   ├── org.tmLanguage.template.yaml # SSoT for Structure
│   └── org.tmLanguage.json         # Build artifact
├── test/
│   ├── fixtures/
│   │   ├── F01-headlines.org # New, unified fixtures
│   │   └── ...
│   ├── integration/
│   │   └── colorization.snapshot.test.ts
│   └── unit/
│       └── grammar-regex.test.ts
└── themes/
    └── orgdown-debug-theme.json    # Build artifact
#+END_SRC