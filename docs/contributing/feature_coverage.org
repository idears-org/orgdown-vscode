* Orgdown Feature Coverage Dashboard

** 1. Purpose

This document serves as the official checklist and roadmap for tracking which Org Mode features are covered by our new, standardized testing framework. Its goal is to provide a clear overview of project status and to guide new contributions.

For the complete technical workflow on how to add a new feature or test case, please see the [[./readme.org][Contribution Guide]].

** 2. How to Contribute

1.  **Pick an Unchecked Item**: Find a feature below that is not yet marked as `[X]`, preferably starting with a `[Priority: High]` item.
2.  **Consult the Guide**: Follow the step-by-step instructions in the [[../development-guide.org][Development Guide]] to implement it.
3.  **Create or Update the Fixture**: The primary deliverable is the fixture file specified in the checklist (e.g., `test/fixtures/F05-tables.org`).
4.  **Submit a Pull Request**: Once all tests pass and snapshots are updated, submit your PR.

** 3. Fixture Implementation Status

*** Core Structure [Priority: High]
- [X] **Headlines**: Levels, TODOs, priorities, tags, commented headlines.
  _status: SSoT Refactored, L1/L2/L3 Tests Active_
  _fixture: ~test/fixtures/F01-headlines.org~
  _syntax: `headline`_
- [X] **Lists & Checkboxes**: Unordered, ordered, description lists, and checkboxes.
  _status: SSoT Refactored, L1/L2/L3 Tests Active_
  _fixture: ~test/fixtures/F02-lists.org~
  _syntax: `list-item`_
- [X] **Horizontal Rules**: Standard `-----`.
  _status: SSoT Refactored, L1/L2/L3 Tests Active_
  _fixture: ~test/fixtures/F03-horizontal-rules.org~
  _syntax: `horizontal-rule`_

*** Block-Level Elements [Priority: High]
- [X] **Standard Blocks**: EXAMPLE, QUOTE, VERSE, CENTER, COMMENT.
  _status: SSoT Refactored, L1/L2/L3 Tests Active_
  _fixture: ~test/fixtures/F04-standard-blocks.org~
  _syntax: `standard-block`_
- [X] **Source Code Blocks**: `#+BEGIN_SRC` ... `#+END_SRC` with language identifiers.
  _status: SSoT Refactored, L1/L2/L3 Tests Active_
  _fixture: ~test/fixtures/F05-src-blocks.org~
  _syntax: `src-block`_
- [X] **Customized Blocks**: Generic `#+BEGIN_...` / `#+END_...` blocks.
  _status: SSoT Refactored, L1/L2/L3 Tests Active_
  _fixture: ~test/fixtures/F06-customized-blocks.org~
  _syntax: `customized-block`_
- [X] **Dynamic Blocks**: `#+BEGIN:` ... `#+END:`.
  _status: SSoT Refactored, L1/L2/L3 Tests Active_
  _fixture: ~test/fixtures/F07-dynamic-blocks.org~
  _syntax: `dynamic-block`_

*** Metadata and Planning [Priority: High]
- [X] **Keywords**: File-level keywords like `#+TITLE`, `#+AUTHOR`, `#+FILETAGS`.
  _status: SSoT Refactored, L1/L2/L3 Tests Active_
  _fixture: ~test/fixtures/F08-keywords.org~
  _syntax: `keyword`_
- [X] **Drawers**: PROPERTIES, LOGBOOK, and custom drawers.
  _status: SSoT Refactored, L1/L2/L3 Tests Active_
  _fixture: ~test/fixtures/F09-drawers.org~
  _syntax: `drawer`_
- [X] **Planning Lines**: SCHEDULED, DEADLINE, CLOSED timestamps.
  _status: SSoT Refactored, L1/L2/L3 Tests Active_
  _fixture: ~test/fixtures/F10-planning-lines.org~
  _syntax: `planning-line`_
- [ ] **Timestamps**: Active, inactive, ranges, and repeaters.
  _fixture: ~test/fixtures/F13-timestamps.org~, ~test/fixtures/F14-timestamp-edge-cases.org~
  _syntax: `timestamp`_
- [ ] **Properties**: Property inheritance and value types.
  _fixture: ~test/fixtures/F24-property-inheritance.org~, ~test/fixtures/F25-property-value-types.org~
  _syntax: `property`_

*** Inline Elements [Priority: Medium]
- [ ] **Links**: All link types (internal, external, file, etc.).
  _fixture: ~test/fixtures/F15-links.org~, ~test/fixtures/F16-link-abbreviation.org~
  _syntax: `link`_
- [ ] **Inline Markup**: Bold, italic, underline, verbatim, code, strike-through.
  _fixture: ~test/fixtures/F18-inline-markup.org~, ~test/fixtures/F19-inline-markup-nesting.org~
  _syntax: `inline-markup`_
- [ ] **Footnotes**: Definitions and inline references.
  _fixture: ~test/fixtures/F17-footnote-edge-cases.org~
  _syntax: `footnote`_
- [ ] **Macros**: Definition and usage.
  _fixture: ~test/fixtures/F20-macros.org~, ~test/fixtures/F21-macro-expansion-edge-cases.org~
  _syntax: `macro`_
- [ ] **Inline LaTeX**: Math fragments like `\alpha`, `$ ... $`, etc.
  _fixture: ~test/fixtures/F32-inline-latex.org~
  _syntax: `inline-latex`_

*** Advanced Features & Edge Cases [Priority: Medium]
- [ ] **Tables**: Simple tables, alignment, and formulas.
  _fixture: ~test/fixtures/F05-tables.org~, ~test/fixtures/F06-table-formula-edge-cases.org~
  _syntax: `table`_
- [ ] **Comments**: Line comments and commented subtrees.
  _fixture: ~test/fixtures/F30-comment-subtree.org~
  _syntax: `comment`_
- [ ] **Include Directive**: `#+INCLUDE` keyword.
  _fixture: ~test/fixtures/F33-include.org~
  _syntax: `include`_
- [ ] **Archive & Tags**: Archive subtrees and tags.
  _fixture: ~test/fixtures/F35-archive-subtree.org~, ~test/fixtures/F27-tags.org~
  _syntax: `archive`, `tag`_

*** Integration & Stress Tests [Priority: Low]
- [ ] **Multilingual**: Fixtures with non-ASCII characters.
  _fixture: ~test/fixtures/F31-multilingual-fixture.org~_
- [ ] **Malformed Syntax**: Tests for graceful handling of broken syntax.
  _fixture: ~test/fixtures/F36-malformed-syntax.org~_
- [ ] **Complex Nesting**: Deeply nested and combined structures.
  _fixture: ~test/fixtures/F37-complex-noweb-reference.org~, ~test/fixtures/F38-block-edge-cases.org~_
- [ ] **Kitchen Sink**: A single, comprehensive file combining all features.
  _fixture: ~test/fixtures/F34-kitchen-sink.org~_
