# Org Mode TextMate Grammar (YAML Source)
# This file is the single source of truth for Orgdown syntax highlighting.
# Edit this file and run the build script to generate org.tmLanguage.json.

fileTypes: [org]
name: Org Mode
scopeName: text.org
patterns:
  - { include: '#block' }
repository:
  block:
    patterns:
      - { include: '#comments' }
      - { include: '#keywords' }
      - { include: '#headings' }
      - { include: '#org-special-blocks' }
      - { include: '#org-src-blocks' }
      - { include: '#drawers' }
      - { include: '#lists' }
      - { include: '#horizontal-rules' }
      - { include: '#tables' }
      - { include: '#footnotes' }
      - { include: '#paragraph' }
  # org-block-base 结构体定义（YAML anchor，仅复用内容）
  org-block-base: &org-block-base
    beginCaptures: { "0": { name: punctuation.definition.raw.begin.org } }
    endCaptures: { "0": { name: punctuation.definition.raw.end.org } }
    patterns:
      - include: "#inline-markup"
  # org-src-blocks 由 build-grammar.mjs 自动生成
  org-src-blocks:
    patterns:
      # SRC block language definitions will be auto-generated by the build script
      # For any language not in the list, a fallback pattern will match and highlight the block generically.
      - "{{srcBlockDefinitions}}"
  # org-special-blocks 复用 org-block-base
  org-special-blocks:
    patterns:
      - <<: *org-block-base
        name: markup.raw.block.org
        begin: "(?i)^#\\+BEGIN_QUOTE"
        end: "(?i)^#\\+END_QUOTE"
      - <<: *org-block-base
        name: markup.raw.block.org
        begin: "(?i)^#\\+BEGIN_EXAMPLE"
        end: "(?i)^#\\+END_EXAMPLE"
      - <<: *org-block-base
        name: markup.raw.block.org
        begin: "(?i)^#\\+BEGIN_VERSE"
        end: "(?i)^#\\+END_VERSE"
      - <<: *org-block-base
        name: markup.raw.block.org
        begin: "(?i)^#\\+BEGIN_CENTER"
        end: "(?i)^#\\+END_CENTER"
      - <<: *org-block-base
        name: markup.raw.block.org
        begin: "(?i)^#\\+BEGIN_COMMENT"
        end: "(?i)^#\\+END_COMMENT"
  keywords:
    patterns:
      - name: meta.keyword.option.org
        match: "^\\s*(#\\+([A-Z_]+):)\\s*(.*)"
        captures:
          1: { name: keyword.other.org }
          2: { name: entity.name.function.option.org }
          3: { name: string.unquoted.value.org }
  headings:
    name: markup.heading.org
    match: "^(\\*+)\\s+(?:(TODO|DONE|WAITING|NEXT)\\s+)?(?:(\\[#[A-Z0-9]\\])\\s+)?(.*?)(?:\\s+:(.*?):)?\\s*$"
    captures:
      1:
        patterns:
          - match: "(\\*)(?=\\s)"
            name: heading.1.org
            captures:
              1: { name: punctuation.definition.heading.org }
          - match: "(\\*\\*)(?=\\s)"
            name: heading.2.org
            captures:
              1: { name: punctuation.definition.heading.org }
          - match: "(\\*\\*\\*)(?=\\s)"
            name: heading.3.org
            captures:
              1: { name: punctuation.definition.heading.org }
          - match: "(\\*\\*\\*\\*)(?=\\s)"
            name: heading.4.org
            captures:
              1: { name: punctuation.definition.heading.org }
          - match: "(\\*\\*\\*\\*\\*)(?=\\s)"
            name: heading.5.org
            captures:
              1: { name: punctuation.definition.heading.org }
          - match: "(\\*{6,})(?=\\s)"
            name: heading.6.org
            captures:
              1: { name: punctuation.definition.heading.org }
          - match: "(\\*+)"
            name: punctuation.definition.heading.org
      2: { name: keyword.other.todo.org }
      3: { name: constant.other.priority.org }
      4:
        name: entity.name.section.org
        patterns:
          - include: "#inline-markup"
      5: { name: entity.name.tag.org }
  special-blocks:
    patterns:
      - name: markup.raw.block.org
        begin: "(?i)^#\\+BEGIN_QUOTE"
        end: "(?i)^#\\+END_QUOTE"
        beginCaptures: { "0": { name: punctuation.definition.raw.begin.org } }
        endCaptures: { "0": { name: punctuation.definition.raw.end.org } }
        patterns:
          - include: "#inline-markup"
      - name: markup.raw.block.org
        begin: "(?i)^#\\+BEGIN_EXAMPLE"
        end: "(?i)^#\\+END_EXAMPLE"
        beginCaptures: { "0": { name: punctuation.definition.raw.begin.org } }
        endCaptures: { "0": { name: punctuation.definition.raw.end.org } }
      - name: markup.raw.block.org
        begin: "(?i)^#\\+BEGIN_VERSE"
        end: "(?i)^#\\+END_VERSE"
        beginCaptures: { "0": { name: punctuation.definition.raw.begin.org } }
        endCaptures: { "0": { name: punctuation.definition.raw.end.org } }
        patterns:
          - include: "#inline-markup"
      - name: markup.raw.block.org
        begin: "(?i)^#\\+BEGIN_CENTER"
        end: "(?i)^#\\+END_CENTER"
        beginCaptures: { "0": { name: punctuation.definition.raw.begin.org } }
        endCaptures: { "0": { name: punctuation.definition.raw.end.org } }
      - name: markup.raw.block.org
        begin: "(?i)^#\\+BEGIN_COMMENT"
        end: "(?i)^#\\+END_COMMENT"
        beginCaptures: { "0": { name: punctuation.definition.raw.begin.org } }
        endCaptures: { "0": { name: punctuation.definition.raw.end.org } }
  drawers:
    name: meta.drawer.org
    begin: "^\\s*:(PROPERTIES|LOGBOOK):\\s*$"
    end: "^\\s*:END:\\s*$"
    beginCaptures:
      0: { name: punctuation.definition.drawer.begin.org }
      1: { name: entity.name.function.drawer.org }
    endCaptures:
      0: { name: punctuation.definition.drawer.end.org }
  lists:
    patterns:
      - name: markup.list.unnumbered.org
        match: "^(\\s*)([-+*])\\s+(?:\\[( |X|-)\\])?"
        captures:
          1: { name: string.other.whitespace.leading }
          2: { name: punctuation.definition.list.begin.org }
      - name: markup.list.numbered.org
        match: "^(\\s*)(\\d+[.)])\\s+(?:\\[( |X|-)\\])?"
        captures:
          1: { name: string.other.whitespace.leading }
          2: { name: punctuation.definition.list.begin.org }
      - name: markup.list.unnumbered.org
        match: "^(\\s*).+?\\s*::\\s*"
  tables:
    name: markup.table.org
    match: "^\\s*\\|.*\\|$"
  horizontal-rules:
    name: markup.other.horizontal-rule.org
    match: "^\\s*-{5,}\\s*$"
  footnotes:
    patterns:
      - name: meta.footnote.definition.org
        match: "^\\[fn:([^\\]]+)\\]"
      - name: meta.footnote.reference.org
        match: "\\[fn:([^\\]]+)\\]"
  paragraph:
    begin: "^(?=\\S)"
    end: "^\\s*$"
    patterns:
      - include: "#inline-markup"
  inline-markup:
    patterns:
      - include: "#links"
      - include: "#timestamps-active"
      - include: "#timestamps-inactive"
      - include: "#latex"
      - include: "#bold"
      - include: "#italic"
      - include: "#underline"
      - include: "#strikethrough"
      - include: "#code"
      - include: "#verbatim"
      - include: "#entities"
      - include: "#sub-super-scripts"
  links:
    name: meta.link.org
    match: "(\\[\\[)([^]]+?)(?:(?:\\]\\[)([^]]+?))?(\\]\\])"
    captures:
      1: { name: punctuation.definition.link.begin.org }
      2: { name: markup.underline.link.org }
      3: { name: string.other.link.description.org }
      4: { name: punctuation.definition.link.end.org }
  timestamps-active:
    name: constant.other.timestamp.active.org
    match: "<[0-9]{4}-[0-9]{2}-[0-9]{2}.*?>"
  timestamps-inactive:
    name: comment.timestamp.inactive.org
    match: "\\[[0-9]{4}-[0-9]{2}-[0-9]{2}.*?\\]"
  latex:
    name: markup.math.org
    match: "(\\$)[^$\\n]+?(\\$)|(\\\\[(])[^\\n]+?(\\\\[)])|(\\\\[\\[])[^\\n]+?(\\\\[\\]])"
  bold:
    name: markup.bold.org
    match: "(\\*)[^\\s*](.*?)[^\\s*](\\*)"
  italic:
    name: markup.italic.org
    match: "(/)[^\\s/](.*?)[^\\s/](/)"
  underline:
    name: markup.underline.org
    match: "(_)[^\\s_](.*?)[^\\s_](_)"
  strikethrough:
    name: markup.strikethrough.org
    match: "(\\+)[^\\s+](.*?[^\\s+])(\\+)"
  code:
    name: markup.inline.raw.org
    match: "(~)[^\\s~](.*?)[^\\s~](~)"
  verbatim:
    name: markup.inline.raw.org
    match: "(=)[^\\s=](.*?)[^\\s=](=)"
  entities:
    name: constant.character.entity.org
    match: "\\[a-zA-Z]+(\\{\\})?"
  sub-super-scripts:
    name: markup.other.sub-super-script.org
    match: "[_^]({[^}]+}|\\S)"
